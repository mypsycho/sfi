### Properties for installation : Mini-ant :-) ###
# os.type may be overridden by 'profile.cfg' file
os.type=linux

# Note : TODO Rename 
#  dbServer   for dataBase
#  appServer  for server
#  cIntegrApp for intContTool
#  qualityApp for qualityTool
#  projectApp for issueTool
#  reposApp   for repositoryTool
#  ldapApp    for directory
#  cReviewApp for codereview


deploy.dir=${basedir}/deploy
repo.dir=${basedir}/repository
conf.dir=${basedir}/conf
modules.dir=${basedir}/bin/modules
ext.properties=bin/urls/urls.properties


### ### ### Configuration ### ### ###
sfi.runtime.name=Software Factory configuration
sfi.runtime.exec[configure]=configure
sfi.runtime.exec[license]=message
sfi.runtime.license.message=downloadNotice
sfi.runtime.exec[plugins]=unpack
sfi.runtime.plugins.fromdir=ant-libs
sfi.runtime.plugins.todir=ant-libs
sfi.java.drivers=java-libs
#sfi.runtime.plugins.tofile : no need to rename



### ### ### Ruby/RubyOnRails ### ### ###
sfi.ruby.name=jruby
sfi.ruby.version=1.6.2


sfi.ruby.exec[install]=unpack
sfi.ruby.install.fromfile=${sfi.ruby.name}-bin-${sfi.ruby.version}.tar.gz
sfi.ruby.install.output=${sfi.ruby.name}-${sfi.ruby.version}
sfi.ruby.install.tofile=${sfi.ruby.name}

sfi.ruby.exec[drivers]=copy
sfi.ruby.drivers.fromdir=${sfi.java.drivers}
sfi.ruby.drivers.todir=${sfi.ruby.install.tofile}/lib

#sfi.ruby.exec[gems] # ant task
sfi.ruby.gems.fromdir=ruby-gems



sfi.ruby.dir=${deploy.dir}/${sfi.ruby.install.tofile}
sfi.ruby.native=x86_64-Linux/libjffi-1.0.so





### ### ### Server ### ### ###
sfi.server.name=apache-tomcat
sfi.server.version.major=6
sfi.server.version=${sfi.server.version.major}.0.35
sfi.server.exec=${sfi.server.name}.ant

sfi.server.exec[install]=unpack
sfi.server.install.fromfile=${sfi.server.name}-${sfi.server.version}.tar.gz
sfi.server.install.output=${sfi.server.name}-${sfi.server.version}
sfi.server.install.tofile=${sfi.server.name}
sfi.server.apps.path=${sfi.server.install.tofile}/webapps
sfi.server.exec[drivers]=copy
sfi.server.drivers.fromdir=${sfi.java.drivers}
sfi.server.drivers.todir=${sfi.server.install.tofile}/lib
sfi.server.exec[patch]=delegate
sfi.server.patch.ant=${sfi.server.install.tofile}/patch/build.xml
sfi.server.patch.target=jar
sfi.server.patch.output=${sfi.server.install.tofile}/patch/target/tomcat-patch.jar
sfi.server.patch.tofile=${sfi.server.install.tofile}/lib/tomcat-patch.jar

## for tomcat 5.5
#sfi.server.drivers.todir=${sfi.server.install.tofile}/common/lib



### ### ### Data Base (SQL) ### ### ###
sfi.dataBase.name=mysql
sfi.dataBase.version.major=5.1
sfi.dataBase.version=${sfi.dataBase.version.major}.57
sfi.dataBase.variant=${os.type}-i686-glibc23

sfi.dataBase.exec[install]=unpack
sfi.dataBase.install.fromfile=${sfi.dataBase.name}-${sfi.dataBase.version}-${sfi.dataBase.variant}.tar.gz
sfi.dataBase.install.output=${sfi.dataBase.name}-${sfi.dataBase.version}-${sfi.dataBase.variant}
sfi.dataBase.install.tofile=${sfi.dataBase.name}-server
# working dir is ???
#sfi.dataBase.exec[startup]
#sfi.dataBase.exec[shutdown]




### ### ### Build tool ### ### ###
sfi.buildTool.name=apache-maven
sfi.buildTool.version=3.0.4
sfi.buildTool.exec[install]=unpack
sfi.buildTool.install.fromfile=${sfi.buildTool.name}-${sfi.buildTool.version}-bin.tar.gz
sfi.buildTool.install.output=${sfi.buildTool.name}-${sfi.buildTool.version}
sfi.buildTool.install.tofile=${sfi.buildTool.name}



### ### ### Integration tool ### ### ###
sfi.intContTool.name=jenkins
sfi.intContTool.version=1.450
sfi.intContTool.exec[install]=copy
sfi.intContTool.install.fromfile=${sfi.intContTool.name}-${sfi.intContTool.version}.war
sfi.intContTool.install.todir=${sfi.server.apps.path}
sfi.intContTool.install.tofile=${sfi.intContTool.name}.war

sfi.intContTool.exec[plugins]=copy
sfi.intContTool.plugins.fromdir=${sfi.intContTool.name}-plugins
sfi.intContTool.plugins.todir=${sfi.intContTool.name}/plugins



### ### ### Quality tool ### ### ###
sfi.qualityTool.name=sonar
sfi.qualityTool.version=2.13.1
sfi.qualityTool.exec[install]=unpack
sfi.qualityTool.install.fromfile=${sfi.qualityTool.name}-${sfi.qualityTool.version}.zip
sfi.qualityTool.install.output=${sfi.qualityTool.name}-${sfi.qualityTool.version}
sfi.qualityTool.install.tofile=${sfi.qualityTool.name}

sfi.qualityTool.exec[plugins]=copy
sfi.qualityTool.plugins.fromdir=${sfi.qualityTool.name}-plugins
sfi.qualityTool.plugins.todir=${sfi.qualityTool.install.tofile}/extensions/plugins

#sfi.qualityTool.exec[build]=delegate
sfi.qualityTool.build.ant=${sfi.qualityTool.install.tofile}/war/build.xml
sfi.qualityTool.build.target=war
sfi.qualityTool.build.output=${sfi.qualityTool.install.tofile}/war/${sfi.qualityTool.name}.war
sfi.qualityTool.build.tofile=${sfi.server.apps.path}/${sfi.qualityTool.name}.war
# no working dir, temporary extraction



### ### ### Repository tool ### ### ###
sfi.repositoryTool.name=nexus
sfi.repositoryTool.version=1.9.2.4
sfi.repositoryTool.exec[install]=copy
sfi.repositoryTool.install.fromfile=${sfi.repositoryTool.name}-webapp-${sfi.repositoryTool.version}.war
sfi.repositoryTool.install.todir=${sfi.server.apps.path}
sfi.repositoryTool.install.tofile=${sfi.repositoryTool.name}.war



### ### ### Issue tool ### ### ###
sfi.issueTool.name=redmine
#sfi.issueTool.version=1.2.1
sfi.issueTool.version=1.3.1
sfi.issueTool.exec[install]=unpack
sfi.issueTool.install.fromfile=${sfi.issueTool.name}-${sfi.issueTool.version}.tar.gz
sfi.issueTool.install.output=${sfi.issueTool.name}-${sfi.issueTool.version}
#sfi.issueTool.install.output=edavis10-${sfi.issueTool.name}-1faf02c
sfi.issueTool.install.tofile=${sfi.issueTool.name}

#sfi.issueTool.exec[init]=delegate




sfi.issueTool.exec[plugins]=unpack
sfi.issueTool.plugins.fromdir=${sfi.issueTool.name}-plugins
sfi.issueTool.plugins.todir=${sfi.issueTool.name}/vendor/plugins

#sfi.issueTool.exec[build]=delegate
sfi.issueTool.build.output=${sfi.issueTool.install.tofile}/${sfi.issueTool.name}.war
sfi.issueTool.build.tofile=${sfi.server.apps.path}/${sfi.issueTool.name}.war





### ### ### Directory (LDAP) Server ### ### ###
sfi.directory.name=apacheds
sfi.directory.version.major=1.5
sfi.directory.version=${sfi.directory.version.major}.7
sfi.directory.exec[install]=unpack
sfi.directory.install.fromfile=${sfi.directory.name}-${sfi.directory.version}.tar.gz
sfi.directory.install.output=${sfi.directory.name}_${sfi.directory.version}
sfi.directory.install.tofile=${sfi.directory.name}

#sfi.directory.exec[build]=delegate
sfi.directory.build.ant=${sfi.directory.install.tofile}/war/build.xml
sfi.directory.build.target=war
sfi.directory.build.output=${sfi.directory.install.tofile}/war/target/${sfi.directory.name}.war
sfi.directory.build.tofile=${sfi.server.apps.path}/${sfi.directory.name}.war

#sfi.directory.exec[secure]=delegate
sfi.directory.secure.target=securePassword


### ### ### Directory (LDAP) client ### ### ###
sfi.ldapClient.name=OpenDS
sfi.ldapClient.version=2.2.1
sfi.ldapClient.exec[install]=unpack
sfi.ldapClient.install.fromfile=${sfi.ldapClient.name}-${sfi.ldapClient.version}.zip
sfi.ldapClient.install.output=${sfi.ldapClient.name}-${sfi.ldapClient.version}
sfi.ldapClient.install.tofile=${sfi.ldapClient.name}

users.dir=${conf.dir}/users

#sfi.ldapClient.exec[roles]=delegate
sfi.ldapClient.roles.target=import
sfi.ldapClient.roles.ldif=${users.dir}/roles.ldif

#sfi.ldapClient.exec[users]=delegate
sfi.ldapClient.users.target=import
sfi.ldapClient.users.ldif=${users.dir}/users.ldif

#sfi.ldapClient.exec[autorizations]=delegate
sfi.ldapClient.autorizations.target=import
sfi.ldapClient.autorizations.ldif=${users.dir}/authorizations.ldif








#sfi.scm.exec[install-server]=copy
#sfi.scm.install-server.fromdir=${sfi.scm.install.tofile}
#sfi.scm.install-server.todir=share/WEB-INF/lib

sfi.scm.name=SCM-Manager
sfi.scm.version=1.12
sfi.scm.exec[install]=copy
sfi.scm.install.fromfile=scm-webapp-${sfi.scm.version}.war
sfi.scm.install.todir=${sfi.server.apps.path}
sfi.scm.install.tofile=scm.war
sfi.scm.exec[plugins]=copy
sfi.scm.plugins.fromdir=${sfi.scm.name}-plugins
sfi.scm.plugins.todir=scm/plugins

sfi.scm.install-clients.todir=tools
sfi.scm.git-version=1.2.0.201112221803-r
sfi.scm.exec[install-git]=copy
sfi.scm.install-git.fromdir=jgit
sfi.scm.install-git.todir=${sfi.scm.install-clients.todir}/jgit
sfi.scm.exec[install-git-exe]=noop


# If a new version of jgit is downloaded, 
#   build is required as versions are included in Manifest.
sfi.scm.exec[build-git]=delegate
sfi.scm.build-git.antfile=${modules.dir}/jgit.ant
sfi.scm.build-git.target=jar

sfi.scm.svn-name=svnkit
sfi.scm.svn-version=1.3.7
sfi.scm.exec[install-svn]=unpack
sfi.scm.install-svn.fromfile=org.tmatesoft.svn_${sfi.scm.svn-version}.standalone.zip
#Warning : inner build id.
sfi.scm.install-svn.output=svnkit-${sfi.scm.svn-version}
sfi.scm.install-svn.tofile=${sfi.scm.install-clients.todir}/svnkit

sfi.issueTool.exec[scm-svn]=copy
sfi.issueTool.scm-svn.fromfulldir=${deploy.dir}/${sfi.scm.install-svn.tofile}
sfi.issueTool.scm-svn.fromfile=lib/*.jar
sfi.issueTool.scm-svn.output=${sfi.scm.install-svn.output}
sfi.issueTool.scm-svn.todir=${sfi.issueTool.name}/vendor/plugins/redmine_svnkit_adapter

sfi.scm.exec[install-svn-exe]=noop



sfi.scm.exec[updateHooks]=delegate
sfi.scm.updateHooks.target=updateHooks

sfi.codereview.name=Gerrit
sfi.codereview.version=2.2.2.1
# gerrit site <=> home
sfi.codereview.site=gerrit-site
sfi.codereview.exec[install]=copy
sfi.codereview.install.fromfile=gerrit-${sfi.codereview.version}.war
sfi.codereview.install.todir=${sfi.server.apps.path}
sfi.codereview.install.tofile=gerrit.war
sfi.codereview.exec[drivers]=copy
sfi.codereview.drivers.fromdir=${sfi.java.drivers}
sfi.codereview.drivers.todir=${sfi.codereview.site}/lib

