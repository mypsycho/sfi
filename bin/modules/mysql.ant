<?xml version="1.0" encoding="UTF-8"?>

<project name="MysqlServer-Execution" basedir="../.." >

    <loadproperties>
        <string>    
    deploy.dir = deploy
    repo.dir = repository
    sfi.java.drivers = java-libs
    sfi.dataBase.install.tofile = mysql-server
    
    mysql.startup.delay = 5
    mysql.shutdown.delay = 5
    mysql.admin.user = root
    mysql.admin.builtin.password =
    mysql.admin.password = ${sfi.db.admin.password}

        </string>
    </loadproperties>

    <property name="mysql.base.dir"       location="${deploy.dir}/${sfi.dataBase.install.tofile}" />
    <property name="mysql.defaults.file"  location="${mysql.base.dir}/my.ini" />
    <property name="mysql.binaries.dir"   location="${mysql.base.dir}/bin" />
    <property name="mysql.script.dir"     location="${mysql.base.dir}/scripts" />
    
    

    <path id="mysql.driver.classpath" >
        <fileset dir="${repo.dir}/${sfi.java.drivers}">
            <include name="**/mysql-connector-java*.jar"/>
        </fileset>
    </path>
    
    <macrodef name="sqlScript" ><!--  create-*-mysql.sql -->
        <attribute name="user" default="${mysql.admin.user}" />
        <attribute name="password" default="${mysql.admin.password}" />
        <attribute name="schema" default="" />
        <attribute name="show" default="true" />
        
        <element name="sqlResources" implicit="yes"/>
        <sequential>
            <sql driver="com.mysql.jdbc.Driver" classpathref="mysql.driver.classpath" print="true" onerror="stop"
                    url="jdbc:mysql://localhost:${sfi.db.port}/@{schema}" 
                    userid="@{user}" password="@{password}" showtrailers="false" >
                <resources>
                    <sqlResources />

                </resources>
            </sql>
        </sequential>
    </macrodef>
    
    <macrodef name="createSchema" ><!--  create-*-mysql.sql -->
        <attribute name="schema" />
        <attribute name="user" default="@{schema}"/>
        <attribute name="password" default="@{user}"/>
        <attribute name="options" default="CHARACTER SET utf8" />
        <sequential>
            <sqlScript schema="" show="false" >
                <string>
                    CREATE DATABASE IF NOT EXISTS @{schema} @{options};
                    GRANT ALL PRIVILEGES ON @{schema}.* to '@{user}'@@'localhost' IDENTIFIED BY '@{password}';
                    GRANT ALL PRIVILEGES ON @{schema}.* to '@{user}'@@'%'         IDENTIFIED BY '@{password}';
                    FLUSH PRIVILEGES;
                    SHOW DATABASES;
                </string>
            </sqlScript>
        </sequential>
    </macrodef>
    



    <property name="mysql.script.dir"        location="${mysql.base.dir}/script" />
    <property name="mysql.installation.flag" location="${mysql.base.dir}/data.installed" />
    
    <target name="startup" depends="installScript,startQuiet,startConsole" >
        <echo>Wait for data base to start (${mysql.startup.delay}s)</echo>
        <sleep seconds="${mysql.startup.delay}" />
        <antcall target="secureInstallation" />
    </target>


    <target name="startQuiet" if="noConsole" >
        <exec executable="${mysql.binaries.dir}/mysqld" dir="${mysql.base.dir}" spawn="true" >
            <arg value="--defaults-file=${mysql.defaults.file}" />
            <arg value="--basedir=${mysql.base.dir}" />
        </exec>
    </target>
    

    <target name="startConsole" unless="noConsole">
        <exec executable="xterm" dir="${mysql.base.dir}" spawn="true" >
            <arg value="-e" />
            <arg value="${mysql.binaries.dir}/mysqld" />
            <arg value="--defaults-file=${mysql.defaults.file}" />
            <arg value="--basedir=${mysql.base.dir}" />
            <arg value="--console"/>
        </exec>
    </target>

    <target name="installScript" depends="checkInstallCompleted" unless="mysqlDataExists" >
            <exec executable="${mysql.script.dir}/mysql_install_db" >
            <arg value="--defaults-file=${mysql.defaults.file}" />
            <arg value="--basedir=${mysql.base.dir}" />
        </exec>
    </target>

    <target name="secureInstallation" depends="checkInstallCompleted" unless="mysqlDataExists" >
        <retry retrycount="2" >
            <sequential>
                <sleep seconds="${mysql.startup.delay}" />
                <sql driver="com.mysql.jdbc.Driver" classpathref="mysql.driver.classpath" print="true" onerror="stop"
                    url="jdbc:mysql://localhost:${sfi.db.port}/" 
                    userid="${mysql.admin.user}" password="${mysql.admin.builtin.password}" >
                    <string>
                        UPDATE mysql.user SET Password = PASSWORD('${mysql.admin.password}')
                        WHERE User = '${mysql.admin.user}';
                        DROP DATABASE test;
                        FLUSH privileges;
                        SHOW DATABASES;
                    </string>
                </sql>
            </sequential>
        </retry>
        <tstamp prefix="mysql.install" />
        <echo file="${mysql.installation.flag}" >Database installed and secured at ${mysql.install.TSTAMP} on ${mysql.install.DSTAMP}</echo>
    </target>

    

    
    <target name="checkInstallCompleted" >
        <chmod perm="ugo+x" dir="${mysql.binaries.dir}" includes="*" />
        <chmod perm="ugo+x" dir="${mysql.script.dir}" includes="*" />
        <available property="mysqlDataExists" file="${mysql.installation.flag}" type="file" />
    </target>
    

    <target name="shutdown" >
        <exec executable="${mysql.binaries.dir}/mysqladmin" dir="${mysql.base.dir}" >
            <arg value="--defaults-file=${mysql.defaults.file}" />
            <arg value="--user=${mysql.admin.user}"/>
            <arg value="--password=${mysql.admin.password}"/>
            <arg value="shutdown"/>
        </exec>
        <echo>Wait for data base to stop (${mysql.shutdown.delay}s)</echo>
        <sleep seconds="${mysql.shutdown.delay}" />
    </target>
    
</project>
