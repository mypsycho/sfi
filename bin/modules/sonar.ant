<?xml version="1.0" encoding="UTF-8"?>

<project name="Sonar-Execution" basedir="../..">

  <property name="sfi.dataBase.exec" value="${sfi.dataBase.name}.ant" />
  <import file="${sfi.basedir}/bin/modules/${sfi.dataBase.exec}" />

  <target name="init">
    <createSchema schema="sonar" user="${sfi.sonar.db.user}" password="${sfi.sonar.db.password}" />
  </target>

  <!-- We use script command, not java call to have the environment from setenv -->
  <target name="clean">
    <property name="sonar.plugin.path" value="org/codehaus/sonar/runtime" />
    <!-- remove public runtime configuration -->
    <delete dir="${deploy.dir}/nexus/storage/sonar/${sonar.plugin.path}" />
    <!-- remove local runtime configuration -->
    <delete dir="${deploy.dir}/apache-maven/localRepository/${sonar.plugin.path}" />
    <echo>done</echo>
  </target>

  <!--
    We use script command, not java call to have the environment from setenv. Ldap plugin of sonar
    locks administrators out. Define sonar.admin.uid in conf/default.properties. Type: 'echo
    qualityTool.letmeadmin | exec' in bin folder.
  -->
  <target name="letmeadmin" if="sfi.sonar.admin.uid">
    <!-- test qualityApp.letmeadmin -->
    <echo>ldap plugin of sonar locks administrators out</echo>
    <echo>Define sfi.admin.uid in conf/default.properties</echo>
    <echo>type: exec qualityTool.letmeadmin </echo>
    <input addproperty="sfi.admin.uid">Enter administrator id</input>
    <sqlScript schema="${sfi.sonar.db.user}">
      <string>

      INSERT INTO Groups_Users (group_id, user_id)
      SELECT g.id, u.id
      FROM Groups g, Users u
      WHERE g.name='sonar-administrators'
        AND u.login='${sfi.admin.uid}' 
        AND NOT EXISTS (
          SELECT 1 
          FROM Groups_Users gu 
          WHERE g.id = gu.group_id AND u.id = gu.user_id
          )
      </string>
    </sqlScript>
  </target>

</project>
